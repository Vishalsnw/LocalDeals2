name: Android CI/CD Pipeline (Java Only - Fixed)

on:
  workflow_dispatch:

env:
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🛠 Make gradlew executable
        run: chmod +x ./gradlew

      - name: ⚙️ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📱 Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'

      - name: 📜 Accept licenses
        run: yes | sdkmanager --licenses

      - name: 🧹 Clean project
        run: ./gradlew clean --no-daemon

      - name: 🔨 Build Debug APK (Java only)
        run: |
          echo "🚀 Building Debug APK (Java only, skipping Kotlin/DataBinding)..."
          ./gradlew :app:compileDebugJavaWithJavac assembleDebug \
            -x compileDebugKotlin \
            -x dataBindingGenBaseClassesDebug \
            --no-daemon --stacktrace 2>&1 | tee build.log
        continue-on-error: true

      - name: 🔨 Build Release APK (Java only)
        run: |
          echo "🚀 Building Release APK (Java only, skipping Kotlin/DataBinding)..."
          ./gradlew :app:compileReleaseJavaWithJavac assembleRelease \
            -x compileReleaseKotlin \
            -x dataBindingGenBaseClassesRelease \
            --no-daemon --stacktrace 2>&1 | tee -a build.log
        continue-on-error: true

      - name: 🔍 Extract Java errors
        if: always()
        run: |
          echo "📋 JAVA BUILD ERRORS:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          grep -E 'error: ' build.log | head -n 20 >> $GITHUB_STEP_SUMMARY || true
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "🚨 ERRORS FOUND:"
          grep -E 'error: ' build.log | head -n 20 || echo "No Java errors detected"

      - name: 📦 Check APK build status
        if: always()
        run: |
          DEBUG_APK="app/build/outputs/apk/debug/app-debug.apk"
          RELEASE_APK="app/build/outputs/apk/release/app-release-unsigned.apk"

          echo "### 📦 APK Build Results" >> $GITHUB_STEP_SUMMARY

          if [ -f "$DEBUG_APK" ]; then
            echo "✅ Debug APK built successfully!"
            echo "- ✅ Debug APK: Built" >> $GITHUB_STEP_SUMMARY
            ls -lh "$DEBUG_APK"
          else
            echo "❌ Debug APK build failed"
            echo "- ❌ Debug APK: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -f "$RELEASE_APK" ]; then
            echo "✅ Release APK built successfully!"
            echo "- ✅ Release APK: Built" >> $GITHUB_STEP_SUMMARY
            ls -lh "$RELEASE_APK"
          else
            echo "❌ Release APK build failed"
            echo "- ❌ Release APK: Failed" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📤 Upload APK artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/*.apk
          if-no-files-found: warn

      - name: ❌ Final Java error check
        if: always()
        run: |
          if grep -q "error:" build.log; then
            echo "💥 Java compilation failed - check errors above"
            exit 1
          else
            echo "✅ Java compilation passed"
          fi
